{
	"info": {
		"_postman_id": "bca77de4-673f-4378-8148-0749b89a38ec",
		"name": "World Guest Booking",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "API Ciudades",
			"item": [
				{
					"name": "Crear ciudad",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"response must be valid and have a body\", function () {\r",
									"     pm.response.to.be.ok;\r",
									"     pm.response.to.be.withBody;\r",
									"     pm.response.to.be.json;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Villa La Angostura\",\r\n    \"country\": \"Argentina\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/cities/create",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"cities",
								"create"
							]
						}
					},
					"response": []
				},
				{
					"name": "Listar todas las ciudades",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/cities/all",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"cities",
								"all"
							]
						}
					},
					"response": []
				},
				{
					"name": "Buscar ciudad por id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/cities/get/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"cities",
								"get",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Actualizar ciudad",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"response must be valid and have a body\", function () {\r",
									"     pm.response.to.be.ok;\r",
									"     pm.response.to.be.withBody;\r",
									"     pm.response.to.be.json;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": 2,\r\n    \"name\": \"El Calafate\",\r\n    \"country\": \"Argentina\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/cities/update",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"cities",
								"update"
							]
						}
					},
					"response": []
				},
				{
					"name": "Eliminar ciudad",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/cities/delete/13",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"cities",
								"delete",
								"13"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "API Categorias",
			"item": [
				{
					"name": "Creación del primer alojamiento",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"title\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"description\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"url\");\r",
									"});\r",
									"\r",
									"pm.test(\"response must be valid and have a body\", function () {\r",
									"     pm.response.to.be.ok;\r",
									"     pm.response.to.be.withBody;\r",
									"     pm.response.to.be.json;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"title\":\"Hoteles\",\r\n    \"description\":\"Para descansar comodo\",\r\n    \"url\":\"https://unsplash.com/photos/hOFNeJ9_B98\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/categories/create",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"categories",
								"create"
							]
						}
					},
					"response": []
				},
				{
					"name": "Crear categoría para luego ser eliminada",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"title\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"description\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"url\");\r",
									"});\r",
									"\r",
									"pm.test(\"response must be valid and have a body\", function () {\r",
									"     pm.response.to.be.ok;\r",
									"     pm.response.to.be.withBody;\r",
									"     pm.response.to.be.json;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"title\":\"Alojamiento para eliminar\",\r\n    \"description\":\"Alojamiento que será eliminado\",\r\n    \"url\":\"https://unsplash.com/photos/hOFNeJ9_B98\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/categories/create",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"categories",
								"create"
							]
						}
					},
					"response": []
				},
				{
					"name": "Crear categoría para luego ser actualizada",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"title\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"description\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"url\");\r",
									"});\r",
									"\r",
									"pm.test(\"response must be valid and have a body\", function () {\r",
									"     pm.response.to.be.ok;\r",
									"     pm.response.to.be.withBody;\r",
									"     pm.response.to.be.json;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"title\":\"Alojamiento para actualizar\",\r\n    \"description\":\"Alojamiento que será actualizado\",\r\n    \"url\":\"https://unsplash.com/photos/hOFNeJ9_B98\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/categories/create",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"categories",
								"create"
							]
						}
					},
					"response": []
				},
				{
					"name": "Buscar todos antes de modificaciones y eliminaciones",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"title\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"description\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"url\");\r",
									"});\r",
									"\r",
									"pm.test(\"response must be valid and have a body\", function () {\r",
									"     pm.response.to.be.ok;\r",
									"     pm.response.to.be.withBody;\r",
									"     pm.response.to.be.json;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/categories/all",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"categories",
								"all"
							]
						}
					},
					"response": []
				},
				{
					"name": "Buscar por Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/categories/get/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"categories",
								"get",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Eliminar categoría",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/categories/delete/29",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"categories",
								"delete",
								"29"
							]
						}
					},
					"response": []
				},
				{
					"name": "Actualizar categoría",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Body is correct\", function () {\r",
									"    pm.response.to.have.body({\r",
									"    \"id\": 3,\r",
									"    \"title\": \"Alojamiento actualizado\",\r",
									"    \"description\": \"Se agrega para probar el metodo de actualizacion\",\r",
									"    \"url\": \"https://unsplash.com/photos/hOFNeJ9_B98\"\r",
									"});\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": 3,\r\n    \"title\":\"Alojamiento actualizado\",\r\n    \"description\":\"Se agrega para probar el metodo de actualizacion\",\r\n    \"url\":\"https://unsplash.com/photos/hOFNeJ9_B98\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/categories/update",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"categories",
								"update"
							]
						}
					},
					"response": []
				},
				{
					"name": "Buscar todos post modificaciones/eliminaciones",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Hoteles\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Alojamiento actualizado\");\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/categories/all",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"categories",
								"all"
							]
						}
					},
					"response": []
				},
				{
					"name": "Eliminar categoría inexsistente",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/categories/delete/27",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"categories",
								"delete",
								"27"
							]
						}
					},
					"response": []
				},
				{
					"name": "Actualizar categoría inextistente",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Body is correct\", function () {\r",
									"    pm.response.to.have.body(\"No existe una categoría con el id ingresado\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": 37,\r\n    \"title\":\"Alojamiento actualizado\",\r\n    \"description\":\"Se agrega para probar el metodo de actualizacion\",\r\n    \"url\":\"https://unsplash.com/photos/hOFNeJ9_B98\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/categories/update",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"categories",
								"update"
							]
						}
					},
					"response": []
				},
				{
					"name": "Agregar alojamiento sin título",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(500);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"description\":\"Para descansar comodo\",\r\n    \"url\":\"https://unsplash.com/photos/hOFNeJ9_B98\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/categories/create",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"categories",
								"create"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "API Productos",
			"item": [
				{
					"name": "Crear Producto",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"Hotel Prueba\",\r\n  \"description\": \"Hotel 5 estrellas\",\r\n  \"latitude\": 123.45,\r\n  \"longitude\": 346.78,\r\n  \"address\": \"Calle Falsa 123, CABA\",\r\n  \"qualification\": 8,\r\n  \"reference\": \"Ubicado en el corazón de Buenos Aires\",\r\n  \"category\": {\r\n    \"id\": 1\r\n  },\r\n  \"city\": {\r\n    \"id\": 1\r\n  },\r\n  \"rules\": \"rule 1\",\r\n  \"health\": \"health 1\",\r\n  \"politics\": \"politic 1\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/products/create",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"products",
								"create"
							]
						}
					},
					"response": []
				},
				{
					"name": "Listar todos los productos",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"response must be valid and have a body\", function () {\r",
									"     pm.response.to.be.ok;\r",
									"     pm.response.to.be.withBody;\r",
									"     pm.response.to.be.json;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/products/all",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"products",
								"all"
							]
						}
					},
					"response": []
				},
				{
					"name": "Buscar producto por id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"response must be valid and have a body\", function () {\r",
									"     pm.response.to.be.ok;\r",
									"     pm.response.to.be.withBody;\r",
									"     pm.response.to.be.json;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/products/get/8",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"products",
								"get",
								"8"
							]
						}
					},
					"response": []
				},
				{
					"name": "Eliminar producto por id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/products/delete/22",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"products",
								"delete",
								"22"
							]
						}
					},
					"response": []
				},
				{
					"name": "Buscar por categoria",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"response must be valid and have a body\", function () {\r",
									"     pm.response.to.be.ok;\r",
									"     pm.response.to.be.withBody;\r",
									"     pm.response.to.be.json;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/products/get/category/hostels",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"products",
								"get",
								"category",
								"hostels"
							]
						}
					},
					"response": []
				},
				{
					"name": "Buscar por ciudad",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"response must be valid and have a body\", function () {\r",
									"     pm.response.to.be.ok;\r",
									"     pm.response.to.be.withBody;\r",
									"     pm.response.to.be.json;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/products/get/city/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"products",
								"get",
								"city",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Borrar producto inexsistente",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Body is correct\", function () {\r",
									"    pm.response.to.have.body(\"No existe una categoría con el id ingresado\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/categories/delete/89",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"categories",
								"delete",
								"89"
							]
						}
					},
					"response": []
				},
				{
					"name": "Productos recomendados",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/products/get/recommended",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"products",
								"get",
								"recommended"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "API Caracteristicas",
			"item": [
				{
					"name": "Listar todas las características",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"response must be valid and have a body\", function () {\r",
									"     pm.response.to.be.ok;\r",
									"     pm.response.to.be.withBody;\r",
									"     pm.response.to.be.json;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/features/all",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"features",
								"all"
							]
						}
					},
					"response": []
				},
				{
					"name": "Borrar característica por id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/features/delete/29",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"features",
								"delete",
								"29"
							]
						}
					},
					"response": []
				},
				{
					"name": "Crear característica",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"response must be valid and have a body\", function () {\r",
									"     pm.response.to.be.ok;\r",
									"     pm.response.to.be.withBody;\r",
									"     pm.response.to.be.json;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"title\": \"Lona\",\r\n  \"type\": \"wifi\",\r\n  \"products\": [\r\n    {\r\n      \"id\": 13\r\n    }\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/features/create",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"features",
								"create"
							]
						}
					},
					"response": []
				},
				{
					"name": "Buscar característica por id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"response must be valid and have a body\", function () {\r",
									"     pm.response.to.be.ok;\r",
									"     pm.response.to.be.withBody;\r",
									"     pm.response.to.be.json;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/features/get/4",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"features",
								"get",
								"4"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "API Imagenes",
			"item": [
				{
					"name": "Crear Imagen",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"response must be valid and have a body\", function () {\r",
									"     pm.response.to.be.ok;\r",
									"     pm.response.to.be.withBody;\r",
									"     pm.response.to.be.json;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"title\": \"string\",\r\n  \"url\": \"string\",\r\n  \"productId\": 13\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/images/create",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"images",
								"create"
							]
						}
					},
					"response": []
				},
				{
					"name": "Listar todas las imágenes",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"response must be valid and have a body\", function () {\r",
									"     pm.response.to.be.ok;\r",
									"     pm.response.to.be.withBody;\r",
									"     pm.response.to.be.json;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/images/all",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"images",
								"all"
							]
						}
					},
					"response": []
				},
				{
					"name": "Buscar imagen por id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"response must be valid and have a body\", function () {\r",
									"     pm.response.to.be.ok;\r",
									"     pm.response.to.be.withBody;\r",
									"     pm.response.to.be.json;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/images/get/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"images",
								"get",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Eliminar imagen por id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/images/delete/68",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"images",
								"delete",
								"68"
							]
						}
					},
					"response": []
				},
				{
					"name": "Actualizar imagen",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"response must be valid and have a body\", function () {\r",
									"     pm.response.to.be.ok;\r",
									"     pm.response.to.be.withBody;\r",
									"     pm.response.to.be.json;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": 1,\r\n    \"title\": \"string\",\r\n    \"url\": \"pruebas.com\",\r\n    \"productId\": 1\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/images/update",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"images",
								"update"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "API Puntuación",
			"item": [
				{
					"name": "Buscar todas las puntuaciones",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/products/scores/all",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"products",
								"scores",
								"all"
							]
						}
					},
					"response": []
				},
				{
					"name": "Crear nueva puntuación",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"user\": \"Lona\",\r\n  \"product\": \r\n    {\r\n      \"id\": 1\r\n    },\r\n   \"favorite\": true\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/products/scores/create",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"products",
								"scores",
								"create"
							]
						}
					},
					"response": []
				},
				{
					"name": "Buscar por ID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/products/scores/get/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"products",
								"scores",
								"get",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Actualizar ID",
					"request": {
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/products/scores/update",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"products",
								"scores",
								"update"
							]
						}
					},
					"response": []
				},
				{
					"name": "Borrar puntuación",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/products/scores/delete/{id}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"products",
								"scores",
								"delete",
								"{id}"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}