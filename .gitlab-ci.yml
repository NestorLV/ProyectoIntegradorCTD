image: docker:19.03.0

variables:
  DOCKER_DRIVER: overlay2
  # Create the certificates inside this directory for both the server
  # and client. The certificates used by the client will be created in
  # /certs/client so we only need to share this directory with the
  # volume mount in `config.toml`.
  DOCKER_TLS_CERTDIR: "/certs"
  TAG_LATEST: $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_NAME:latest
  TAG_COMMIT: $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_NAME:$CI_COMMIT_SHORT_SHA

before_script:
  - apk --no-cache add docker-compose      # <---------- Mind this line
  - docker info
  - docker-compose --version

stages:
  - publish
  - deploy

publish:
  stage: publish
  script:
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY
    - docker-compose build
    - docker-compose push

deploy:
  stage: deploy
  tags:
    - deployment
  script:
    - chmod og= $ID_RSA
    - apk update && apk add openssh-client
    - eval $(ssh-agent -s)
    - ssh -i $ID_RSA -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY"
    - docker-compose -H "ssh://$SERVER_USER@$SERVER_IP" down --remove-orphans || true
    - docker-compose -H "ssh://$SERVER_USER@$SERVER_IP" pull
    - docker-compose -H "ssh://$SERVER_USER@$SERVER_IP" up -d
  environment:
    name: production
    url: http://3.214.98.239
  only:
    - main
